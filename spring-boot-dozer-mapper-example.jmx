<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="spring-boot-dozer-mapper-example" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="common-headers-config" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="super-hero" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-760343294">{&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;name&quot;:&quot;Wade&quot;,&quot;canFly&quot;:false,&quot;id&quot;:11,&quot;age&quot;:28}</stringProp>
              <stringProp name="-664793521">{&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;name&quot;:&quot;Bruce&quot;,&quot;canFly&quot;:false,&quot;id&quot;:12,&quot;age&quot;:50}</stringProp>
              <stringProp name="-907527002">{&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;name&quot;:&quot;Steve&quot;,&quot;canFly&quot;:false,&quot;id&quot;:13,&quot;age&quot;:120}</stringProp>
              <stringProp name="1080760446">{&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;name&quot;:&quot;Tony&quot;,&quot;canFly&quot;:true,&quot;id&quot;:14,&quot;age&quot;:45}</stringProp>
              <stringProp name="-1768563167">{&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;name&quot;:&quot;Peter&quot;,&quot;canFly&quot;:true,&quot;id&quot;:15,&quot;age&quot;:21}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-760343294">{&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;name&quot;:&quot;Wade&quot;,&quot;canFly&quot;:false,&quot;id&quot;:11,&quot;age&quot;:28}</stringProp>
              <stringProp name="-664793521">{&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;name&quot;:&quot;Bruce&quot;,&quot;canFly&quot;:false,&quot;id&quot;:12,&quot;age&quot;:50}</stringProp>
              <stringProp name="-907527002">{&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;name&quot;:&quot;Steve&quot;,&quot;canFly&quot;:false,&quot;id&quot;:13,&quot;age&quot;:120}</stringProp>
              <stringProp name="1080760446">{&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;name&quot;:&quot;Tony&quot;,&quot;canFly&quot;:true,&quot;id&quot;:14,&quot;age&quot;:45}</stringProp>
              <stringProp name="-1768563167">{&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;name&quot;:&quot;Peter&quot;,&quot;canFly&quot;:true,&quot;id&quot;:15,&quot;age&quot;:21}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_count" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="53">5</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_matchNr</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_list" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_list</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id_result_list" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id_result_list</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_name" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_name</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_superName" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_superName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.superName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_profession" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_profession</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.profession</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_age" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_age</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.age</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_canFly" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_canFly</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.canFly</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/{id}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${result_id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="692907263">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="-2131571629">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="651047763">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="245359982">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}</stringProp>
              <stringProp name="-971554174">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$.id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="request_payload" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">request_payload</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?name=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?superName=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?profession=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?age=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?canFly=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="canFly" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_canFly}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">canFly</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="71001929">${result}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Scope.variable">result_list</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[*].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[*].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[*].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[*].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[*].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?&amp;age=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?&amp;age=?&amp;canFly=?" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
              <elementProp name="canFly" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_canFly}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">canFly</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE-/super-heroes/{id}" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${result_id}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
              <stringProp name="97196323">false</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST-/super-heroes" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_payload}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="edit_payload" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">edit_payload</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="edit_payload_id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">edit_payload_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">edit_payload</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT-/super-heroes/{id}" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${edit_payload}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${edit_payload_id}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="student" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/students" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/students</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-760343294">{&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;name&quot;:&quot;Wade&quot;,&quot;canFly&quot;:false,&quot;id&quot;:11,&quot;age&quot;:28}</stringProp>
              <stringProp name="-664793521">{&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;name&quot;:&quot;Bruce&quot;,&quot;canFly&quot;:false,&quot;id&quot;:12,&quot;age&quot;:50}</stringProp>
              <stringProp name="-907527002">{&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;name&quot;:&quot;Steve&quot;,&quot;canFly&quot;:false,&quot;id&quot;:13,&quot;age&quot;:120}</stringProp>
              <stringProp name="1080760446">{&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;name&quot;:&quot;Tony&quot;,&quot;canFly&quot;:true,&quot;id&quot;:14,&quot;age&quot;:45}</stringProp>
              <stringProp name="-1768563167">{&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;name&quot;:&quot;Peter&quot;,&quot;canFly&quot;:true,&quot;id&quot;:15,&quot;age&quot;:21}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-760343294">{&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;name&quot;:&quot;Wade&quot;,&quot;canFly&quot;:false,&quot;id&quot;:11,&quot;age&quot;:28}</stringProp>
              <stringProp name="-664793521">{&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;name&quot;:&quot;Bruce&quot;,&quot;canFly&quot;:false,&quot;id&quot;:12,&quot;age&quot;:50}</stringProp>
              <stringProp name="-907527002">{&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;name&quot;:&quot;Steve&quot;,&quot;canFly&quot;:false,&quot;id&quot;:13,&quot;age&quot;:120}</stringProp>
              <stringProp name="1080760446">{&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;name&quot;:&quot;Tony&quot;,&quot;canFly&quot;:true,&quot;id&quot;:14,&quot;age&quot;:45}</stringProp>
              <stringProp name="-1768563167">{&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;name&quot;:&quot;Peter&quot;,&quot;canFly&quot;:true,&quot;id&quot;:15,&quot;age&quot;:21}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_count" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1567">10</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
            <stringProp name="Assertion.scope">variable</stringProp>
            <stringProp name="Scope.variable">result_list_matchNr</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_list" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_list</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id_result_list" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">id_result_list</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_name" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_name</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.name</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_superName" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_superName</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.superName</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_profession" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_profession</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.profession</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_age" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_age</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.age</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="result_canFly" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">result_canFly</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.canFly</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">result</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/{id}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${result_id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="692907263">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="-2131571629">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="651047763">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}</stringProp>
              <stringProp name="245359982">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}</stringProp>
              <stringProp name="-971554174">{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$.id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="request_payload" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">request_payload</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?name=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?superName=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?profession=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?age=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?canFly=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="canFly" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_canFly}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">canFly</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="71001929">${result}</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Scope.variable">result_list</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[*].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[*].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[*].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[*].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[*].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?&amp;age=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET-/super-heroes/search?id=?&amp;name=?&amp;superName=?&amp;profession=?&amp;age=?&amp;canFly=?" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="id" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_id}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">id</stringProp>
              </elementProp>
              <elementProp name="name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_name}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">name</stringProp>
              </elementProp>
              <elementProp name="superName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_superName}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">superName</stringProp>
              </elementProp>
              <elementProp name="profession" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_profession}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">profession</stringProp>
              </elementProp>
              <elementProp name="age" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_age}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">age</stringProp>
              </elementProp>
              <elementProp name="canFly" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">true</boolProp>
                <stringProp name="Argument.value">${result_canFly}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">canFly</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/search</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-22833789">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Wade&quot;,&quot;superName&quot;:&quot;Deadpool&quot;,&quot;profession&quot;:&quot;Street fighter&quot;,&quot;age&quot;:28,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="1147835717">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Bruce&quot;,&quot;superName&quot;:&quot;Hulk&quot;,&quot;profession&quot;:&quot;Doctor&quot;,&quot;age&quot;:50,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="2130812357">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Steve&quot;,&quot;superName&quot;:&quot;Captain America&quot;,&quot;profession&quot;:&quot;Solder&quot;,&quot;age&quot;:120,&quot;canFly&quot;:false}]</stringProp>
              <stringProp name="-994732918">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Tony&quot;,&quot;superName&quot;:&quot;Iron Man&quot;,&quot;profession&quot;:&quot;Business man&quot;,&quot;age&quot;:45,&quot;canFly&quot;:true}]</stringProp>
              <stringProp name="-871295818">[{&quot;id&quot;:${result_id},&quot;name&quot;:&quot;Peter&quot;,&quot;superName&quot;:&quot;Spider Man&quot;,&quot;profession&quot;:&quot;Student&quot;,&quot;age&quot;:21,&quot;canFly&quot;:true}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_id" enabled="true">
            <stringProp name="JSON_PATH">$[0].id</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_id}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$[0].name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$[0].profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$[0].age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$[0].canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE-/super-heroes/{id}" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${result_id}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="assert_response_data" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="3569038">true</stringProp>
              <stringProp name="97196323">false</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">40</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
            <stringProp name="Scope.variable">result_list_1</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST-/super-heroes" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request_payload}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="edit_payload" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">edit_payload</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="edit_payload_id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">edit_payload_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">variable</stringProp>
            <stringProp name="Scope.variable">edit_payload</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT-/super-heroes/{id}" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${edit_payload}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/super-heroes/${edit_payload_id}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="http-status-ok" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49587">201</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_name" enabled="true">
            <stringProp name="JSON_PATH">$.name</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_name}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_profession" enabled="true">
            <stringProp name="JSON_PATH">$.profession</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_profession}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_age" enabled="true">
            <stringProp name="JSON_PATH">$.age</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_age}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="assert_canFly" enabled="true">
            <stringProp name="JSON_PATH">$.canFly</stringProp>
            <stringProp name="EXPECTED_VALUE">${result_canFly}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
